=0.988, Top1=76.31, Top5=90.94, ConceptAlignment=53.01]
[Val] Epoch 99: Loss=2.743, Top1=40.57, Top5=68.02
[Test] Epoch 100: Loss=2.603, Top1=41.22, Top5=69.99
[Done] Best Val=42.01, Final Test=41.22
(CW-old) rnb23@compsci-cluster-fitz-08$ python train_qcw.py --data_dir data/CUB/main_data/ --concept_dir data/CUB/concept_data/ --concepts 'eye,nape' --prefix 'qcw_eye_nape_5' --epochs 200 --batch_size 64 --resume checkpoints/qcw_eye_nape_5_checkpoint.pth
=========== ARGUMENTS ===========
act_mode: pool_max
batch_size: 64
bboxes: 
concept_dir: data/CUB/concept_data/
concepts: eye,nape
cw_loss_weight: 1.0
data_dir: data/CUB/main_data/
depth: 18
disable_subspaces: False
epochs: 200
lr: 0.1
momentum: 0.9
only_load_weights: False
prefix: qcw_eye_nape_5
resume: checkpoints/qcw_eye_nape_5_checkpoint.pth
seed: 1234
use_free: False
weight_decay: 0.0001
whitened_layers: 5
workers: 4
=================================
[Data] #Main Train: 5994
[Data] #Val:        1745
[Data] #Test:       4049
[Data] #Concept:    8563
/home/users/rnb23/.conda/envs/CW-old/lib/python3.11/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/users/rnb23/.conda/envs/CW-old/lib/python3.11/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.
  warnings.warn(msg)
[Checkpoint] Resuming from checkpoints/qcw_eye_nape_5_checkpoint.pth
/usr/project/xtmp/rnb23/CW/ConceptWhitening-revision/train_qcw.py:198: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  ckpt = torch.load(args.resume, map_location="cpu")
[Checkpoint] Resumed epoch=100, best_prec=42.01
[Train] Epoch 1:   0%|                                                                                                | 0/94 [00:02<?, ?it/s]
Traceback (most recent call last):
  File "/usr/project/xtmp/rnb23/CW/ConceptWhitening-revision/train_qcw.py", line 416, in <module>
    main()
  File "/usr/project/xtmp/rnb23/CW/ConceptWhitening-revision/train_qcw.py", line 397, in main
    train_epoch(train_loader, concept_loaders, model, optimizer, epoch, args, writer)
  File "/usr/project/xtmp/rnb23/CW/ConceptWhitening-revision/train_qcw.py", line 244, in train_epoch
    optimizer.step()
  File "/home/users/rnb23/.conda/envs/CW-old/lib/python3.11/site-packages/torch/optim/optimizer.py", line 487, in wrapper
    out = func(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/users/rnb23/.conda/envs/CW-old/lib/python3.11/site-packages/torch/optim/optimizer.py", line 91, in _use_grad
    ret = func(self, *args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/users/rnb23/.conda/envs/CW-old/lib/python3.11/site-packages/torch/optim/sgd.py", line 123, in step
    sgd(
  File "/home/users/rnb23/.conda/envs/CW-old/lib/python3.11/site-packages/torch/optim/sgd.py", line 298, in sgd
    func(
  File "/home/users/rnb23/.conda/envs/CW-old/lib/python3.11/site-packages/torch/optim/sgd.py", line 415, in _multi_tensor_sgd
    torch._foreach_add_(bufs, device_grads, alpha=1 - dampening)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!
(CW-old) rnb23@compsci-cluster-fitz-08$ clear
